{"ast":null,"code":"var _jsxFileName = \"/Users/gherardolattanzi/treasury/src/components/MetricCard.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MetricCard = ({\n  title,\n  value,\n  subtitle,\n  color = '#3b82f6',\n  icon,\n  change\n}) => {\n  const formatValue = val => {\n    if (typeof val === 'number') {\n      if (val >= 1000000000) {\n        return `$${(val / 1000000000).toFixed(2)}B`;\n      } else if (val >= 1000000) {\n        return `$${(val / 1000000).toFixed(2)}M`;\n      } else if (val >= 1000) {\n        return `$${(val / 1000).toFixed(2)}K`;\n      }\n      return val.toLocaleString();\n    }\n    return val;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"metric-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-start justify-between\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 mb-1\",\n          children: [icon && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg\",\n            children: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-sm font-medium text-gray-600\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-baseline gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-2xl font-bold\",\n            style: {\n              color\n            },\n            children: formatValue(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), change && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-sm font-medium ${change.positive ? 'text-green-600' : 'text-red-600'}`,\n            children: [change.positive ? '+' : '', change.value, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), subtitle && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = MetricCard;\nvar _c;\n$RefreshReg$(_c, \"MetricCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MetricCard","title","value","subtitle","color","icon","change","formatValue","val","toFixed","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","positive","_c","$RefreshReg$"],"sources":["/Users/gherardolattanzi/treasury/src/components/MetricCard.tsx"],"sourcesContent":["import React from 'react';\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  subtitle?: string;\n  color?: string;\n  icon?: string;\n  change?: {\n    value: number;\n    positive: boolean;\n  };\n}\n\nexport const MetricCard: React.FC<MetricCardProps> = ({\n  title,\n  value,\n  subtitle,\n  color = '#3b82f6',\n  icon,\n  change\n}) => {\n  const formatValue = (val: string | number) => {\n    if (typeof val === 'number') {\n      if (val >= 1000000000) {\n        return `$${(val / 1000000000).toFixed(2)}B`;\n      } else if (val >= 1000000) {\n        return `$${(val / 1000000).toFixed(2)}M`;\n      } else if (val >= 1000) {\n        return `$${(val / 1000).toFixed(2)}K`;\n      }\n      return val.toLocaleString();\n    }\n    return val;\n  };\n\n  return (\n    <div className=\"metric-card\">\n      <div className=\"flex items-start justify-between\">\n        <div className=\"flex-1\">\n          <div className=\"flex items-center gap-2 mb-1\">\n            {icon && <span className=\"text-lg\">{icon}</span>}\n            <h3 className=\"text-sm font-medium text-gray-600\">{title}</h3>\n          </div>\n          <div className=\"flex items-baseline gap-2\">\n            <p \n              className=\"text-2xl font-bold\"\n              style={{ color }}\n            >\n              {formatValue(value)}\n            </p>\n            {change && (\n              <span \n                className={`text-sm font-medium ${\n                  change.positive ? 'text-green-600' : 'text-red-600'\n                }`}\n              >\n                {change.positive ? '+' : ''}{change.value}%\n              </span>\n            )}\n          </div>\n          {subtitle && (\n            <p className=\"text-sm text-gray-500 mt-1\">{subtitle}</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc1B,OAAO,MAAMC,UAAqC,GAAGA,CAAC;EACpDC,KAAK;EACLC,KAAK;EACLC,QAAQ;EACRC,KAAK,GAAG,SAAS;EACjBC,IAAI;EACJC;AACF,CAAC,KAAK;EACJ,MAAMC,WAAW,GAAIC,GAAoB,IAAK;IAC5C,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;MAC3B,IAAIA,GAAG,IAAI,UAAU,EAAE;QACrB,OAAO,IAAI,CAACA,GAAG,GAAG,UAAU,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;MAC7C,CAAC,MAAM,IAAID,GAAG,IAAI,OAAO,EAAE;QACzB,OAAO,IAAI,CAACA,GAAG,GAAG,OAAO,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;MAC1C,CAAC,MAAM,IAAID,GAAG,IAAI,IAAI,EAAE;QACtB,OAAO,IAAI,CAACA,GAAG,GAAG,IAAI,EAAEC,OAAO,CAAC,CAAC,CAAC,GAAG;MACvC;MACA,OAAOD,GAAG,CAACE,cAAc,CAAC,CAAC;IAC7B;IACA,OAAOF,GAAG;EACZ,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1Bb,OAAA;MAAKY,SAAS,EAAC,kCAAkC;MAAAC,QAAA,eAC/Cb,OAAA;QAAKY,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACrBb,OAAA;UAAKY,SAAS,EAAC,8BAA8B;UAAAC,QAAA,GAC1CP,IAAI,iBAAIN,OAAA;YAAMY,SAAS,EAAC,SAAS;YAAAC,QAAA,EAAEP;UAAI;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChDjB,OAAA;YAAIY,SAAS,EAAC,mCAAmC;YAAAC,QAAA,EAAEX;UAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eACNjB,OAAA;UAAKY,SAAS,EAAC,2BAA2B;UAAAC,QAAA,gBACxCb,OAAA;YACEY,SAAS,EAAC,oBAAoB;YAC9BM,KAAK,EAAE;cAAEb;YAAM,CAAE;YAAAQ,QAAA,EAEhBL,WAAW,CAACL,KAAK;UAAC;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,EACHV,MAAM,iBACLP,OAAA;YACEY,SAAS,EAAE,uBACTL,MAAM,CAACY,QAAQ,GAAG,gBAAgB,GAAG,cAAc,EAClD;YAAAN,QAAA,GAEFN,MAAM,CAACY,QAAQ,GAAG,GAAG,GAAG,EAAE,EAAEZ,MAAM,CAACJ,KAAK,EAAC,GAC5C;UAAA;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EACLb,QAAQ,iBACPJ,OAAA;UAAGY,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAET;QAAQ;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CACxD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GAtDWnB,UAAqC;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}