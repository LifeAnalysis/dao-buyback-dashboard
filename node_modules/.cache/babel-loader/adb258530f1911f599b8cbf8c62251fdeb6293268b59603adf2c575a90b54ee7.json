{"ast":null,"code":"var _DatabaseService;// Browser-compatible database service using localStorage\n// This replaces better-sqlite3 for client-side storage\nexport class DatabaseService{static getInstance(){if(!DatabaseService.instance){DatabaseService.instance=new DatabaseService();}return DatabaseService.instance;}constructor(){this.BUYBACK_KEY='buyback_records';this.HISTORICAL_KEY='historical_charts';this.initializeWithSampleData();}forceRefresh(){// Clear existing data and regenerate\nlocalStorage.removeItem(this.BUYBACK_KEY);localStorage.removeItem(this.HISTORICAL_KEY);this.generateSampleData();}initializeWithSampleData(){// Check if data already exists\nconst existingBuyback=localStorage.getItem(this.BUYBACK_KEY);const existingHistorical=localStorage.getItem(this.HISTORICAL_KEY);// Check if we have the correct number of protocols (should be 7)\nlet needsRefresh=false;if(existingBuyback){try{const data=JSON.parse(existingBuyback);const uniqueProtocols=new Set(data.map(item=>item.protocol));if(uniqueProtocols.size<7){needsRefresh=true;}}catch(e){needsRefresh=true;}}if(!existingBuyback||!existingHistorical||needsRefresh){this.generateSampleData();}}generateSampleData(){const protocols=[{name:'Hyperliquid',token:'HYPE',basePrice:19.3,baseVolume:1200000000},{name:'Jupiter',token:'JUP',basePrice:0.6,baseVolume:850000000},{name:'Aave',token:'AAVE',basePrice:192,baseVolume:45000000},{name:'Jito',token:'JTO',basePrice:5.0,baseVolume:320000000},{name:'Pump.fun',token:'PUMP',basePrice:0.165,baseVolume:180000000},{name:'DeBridge',token:'DBR',basePrice:6.0,baseVolume:125000000},{name:'Fluid',token:'FLUID',basePrice:6.0,baseVolume:240000000}];const buybackRecords=[];const historicalCharts=[];const now=new Date();let cumulativeData={'Hyperliquid':{value:350000000,tokens:18000000},'Jupiter':{value:24000000,tokens:42000000},'Aave':{value:20000000,tokens:115000},'Jito':{value:35000000,tokens:7500000},'Pump.fun':{value:20000000,tokens:125000000},'DeBridge':{value:12000000,tokens:2200000},'Fluid':{value:28000000,tokens:4800000}};for(let i=30;i>=0;i--){const date=new Date(now);date.setDate(date.getDate()-i);const timestamp=date.toISOString();protocols.forEach(protocol=>{// Generate realistic variance\nconst priceVariance=0.9+Math.random()*0.2;const volumeVariance=0.8+Math.random()*0.4;const price=protocol.basePrice*priceVariance;const volume=protocol.baseVolume*volumeVariance;// Calculate buyback amounts\nlet feePercent,dailyBuybackUSD,dailyTokens;if(protocol.name==='Hyperliquid'){feePercent=97;dailyBuybackUSD=volume*0.0002*0.97;dailyTokens=dailyBuybackUSD/price;}else if(protocol.name==='Jupiter'){feePercent=50;dailyBuybackUSD=volume*0.0001*0.5;dailyTokens=dailyBuybackUSD/price;}else if(protocol.name==='Jito'){feePercent=75;dailyBuybackUSD=volume*0.00015*0.75;dailyTokens=dailyBuybackUSD/price;}else if(protocol.name==='Pump.fun'){feePercent=95;dailyBuybackUSD=volume*0.0003*0.95;dailyTokens=dailyBuybackUSD/price;}else if(protocol.name==='DeBridge'){feePercent=60;dailyBuybackUSD=volume*0.0001*0.6;dailyTokens=dailyBuybackUSD/price;}else if(protocol.name==='Fluid'){feePercent=80;dailyBuybackUSD=volume*0.00012*0.8;dailyTokens=dailyBuybackUSD/price;}else{// Aave\nfeePercent=100;dailyBuybackUSD=Math.min(1000000/7,volume*0.0004);dailyTokens=dailyBuybackUSD/price;}// Update cumulative data\ncumulativeData[protocol.name].value+=dailyBuybackUSD;cumulativeData[protocol.name].tokens+=dailyTokens;// Add buyback record\nbuybackRecords.push({id:buybackRecords.length+1,protocol:protocol.name,token:protocol.token,timestamp,total_repurchased:cumulativeData[protocol.name].tokens,total_value_usd:cumulativeData[protocol.name].value,circulating_supply_percent:protocol.name==='Hyperliquid'?6.2:protocol.name==='Jupiter'?3.6:protocol.name==='Jito'?2.1:protocol.name==='Pump.fun'?0.445:protocol.name==='DeBridge'?1.5:protocol.name==='Fluid'?3.2:0.8,estimated_annual_buyback:protocol.name==='Hyperliquid'?600000000:protocol.name==='Jupiter'?250000000:protocol.name==='Jito'?180000000:protocol.name==='Pump.fun'?75000000:protocol.name==='DeBridge'?45000000:protocol.name==='Fluid'?95000000:52000000,fee_allocation_percent:feePercent,price_per_token:price,trading_volume_24h:volume,fee_generation_24h:volume*0.0002});// Add historical chart data\nhistoricalCharts.push({id:historicalCharts.length+1,protocol:protocol.name,timestamp,value_usd:dailyBuybackUSD,tokens_amount:dailyTokens,cumulative_value:cumulativeData[protocol.name].value,cumulative_tokens:cumulativeData[protocol.name].tokens});});}localStorage.setItem(this.BUYBACK_KEY,JSON.stringify(buybackRecords));localStorage.setItem(this.HISTORICAL_KEY,JSON.stringify(historicalCharts));}// Insert buyback record\ninsertBuybackRecord(record){const records=this.getBuybackRecords();const newId=Math.max(...records.map(r=>r.id||0),0)+1;record.id=newId;records.push(record);localStorage.setItem(this.BUYBACK_KEY,JSON.stringify(records));return newId;}// Insert historical chart data\ninsertHistoricalData(data){const records=this.getHistoricalRecords();const newId=Math.max(...records.map(r=>r.id||0),0)+1;data.id=newId;records.push(data);localStorage.setItem(this.HISTORICAL_KEY,JSON.stringify(records));return newId;}getBuybackRecords(){const data=localStorage.getItem(this.BUYBACK_KEY);return data?JSON.parse(data):[];}getHistoricalRecords(){const data=localStorage.getItem(this.HISTORICAL_KEY);return data?JSON.parse(data):[];}// Get latest buyback data for all protocols\ngetLatestBuybackData(){const records=this.getBuybackRecords();const latestByProtocol={};records.forEach(record=>{if(!latestByProtocol[record.protocol]||new Date(record.timestamp)>new Date(latestByProtocol[record.protocol].timestamp)){latestByProtocol[record.protocol]=record;}});return Object.values(latestByProtocol);}// Get historical data for charts\ngetHistoricalData(protocol){let days=arguments.length>1&&arguments[1]!==undefined?arguments[1]:30;const records=this.getHistoricalRecords();const cutoffDate=new Date();cutoffDate.setDate(cutoffDate.getDate()-days);return records.filter(record=>{const recordDate=new Date(record.timestamp);const matchesProtocol=!protocol||record.protocol===protocol;const withinTimeframe=recordDate>=cutoffDate;return matchesProtocol&&withinTimeframe;}).sort((a,b)=>new Date(a.timestamp).getTime()-new Date(b.timestamp).getTime());}// Get buyback trends\ngetBuybackTrends(protocol){let days=arguments.length>1&&arguments[1]!==undefined?arguments[1]:30;const records=this.getBuybackRecords();const cutoffDate=new Date();cutoffDate.setDate(cutoffDate.getDate()-days);return records.filter(record=>{const recordDate=new Date(record.timestamp);return record.protocol===protocol&&recordDate>=cutoffDate;}).map(record=>({timestamp:record.timestamp,total_value_usd:record.total_value_usd,total_repurchased:record.total_repurchased,price_per_token:record.price_per_token,trading_volume_24h:record.trading_volume_24h})).sort((a,b)=>new Date(a.timestamp).getTime()-new Date(b.timestamp).getTime());}// Get performance metrics\ngetPerformanceMetrics(){const records=this.getBuybackRecords();const metricsByProtocol={};records.forEach(record=>{if(!metricsByProtocol[record.protocol]){metricsByProtocol[record.protocol]={protocol:record.protocol,data_points:0,total_value:0,values:[],supply_reductions:[]};}const metrics=metricsByProtocol[record.protocol];metrics.data_points++;metrics.total_value+=record.total_value_usd;metrics.values.push(record.total_value_usd);metrics.supply_reductions.push(record.circulating_supply_percent);});return Object.values(metricsByProtocol).map(metrics=>({protocol:metrics.protocol,data_points:metrics.data_points,avg_value_usd:metrics.total_value/metrics.data_points,max_value_usd:Math.max(...metrics.values),min_value_usd:Math.min(...metrics.values),avg_supply_reduction:metrics.supply_reductions.reduce((a,b)=>a+b,0)/metrics.supply_reductions.length}));}// Clean old data (keep last 90 days)\ncleanOldData(){const cutoffDate=new Date();cutoffDate.setDate(cutoffDate.getDate()-90);const buybackRecords=this.getBuybackRecords();const historicalRecords=this.getHistoricalRecords();const filteredBuyback=buybackRecords.filter(record=>new Date(record.timestamp)>=cutoffDate);const filteredHistorical=historicalRecords.filter(record=>new Date(record.timestamp)>=cutoffDate);localStorage.setItem(this.BUYBACK_KEY,JSON.stringify(filteredBuyback));localStorage.setItem(this.HISTORICAL_KEY,JSON.stringify(filteredHistorical));return buybackRecords.length-filteredBuyback.length+(historicalRecords.length-filteredHistorical.length);}// Close database connection (no-op for localStorage)\nclose(){// No-op for localStorage implementation\n}}_DatabaseService=DatabaseService;DatabaseService.instance=void 0;","map":{"version":3,"names":["DatabaseService","getInstance","instance","constructor","BUYBACK_KEY","HISTORICAL_KEY","initializeWithSampleData","forceRefresh","localStorage","removeItem","generateSampleData","existingBuyback","getItem","existingHistorical","needsRefresh","data","JSON","parse","uniqueProtocols","Set","map","item","protocol","size","e","protocols","name","token","basePrice","baseVolume","buybackRecords","historicalCharts","now","Date","cumulativeData","value","tokens","i","date","setDate","getDate","timestamp","toISOString","forEach","priceVariance","Math","random","volumeVariance","price","volume","feePercent","dailyBuybackUSD","dailyTokens","min","push","id","length","total_repurchased","total_value_usd","circulating_supply_percent","estimated_annual_buyback","fee_allocation_percent","price_per_token","trading_volume_24h","fee_generation_24h","value_usd","tokens_amount","cumulative_value","cumulative_tokens","setItem","stringify","insertBuybackRecord","record","records","getBuybackRecords","newId","max","r","insertHistoricalData","getHistoricalRecords","getLatestBuybackData","latestByProtocol","Object","values","getHistoricalData","days","arguments","undefined","cutoffDate","filter","recordDate","matchesProtocol","withinTimeframe","sort","a","b","getTime","getBuybackTrends","getPerformanceMetrics","metricsByProtocol","data_points","total_value","supply_reductions","metrics","avg_value_usd","max_value_usd","min_value_usd","avg_supply_reduction","reduce","cleanOldData","historicalRecords","filteredBuyback","filteredHistorical","close","_DatabaseService"],"sources":["/Users/gherardolattanzi/treasury/src/database/browserDb.ts"],"sourcesContent":["// Browser-compatible database service using localStorage\n// This replaces better-sqlite3 for client-side storage\n\nexport interface BuybackRecord {\n  id?: number;\n  protocol: string;\n  token: string;\n  timestamp: string;\n  total_repurchased: number;\n  total_value_usd: number;\n  circulating_supply_percent: number;\n  estimated_annual_buyback: number;\n  fee_allocation_percent: number;\n  price_per_token: number;\n  trading_volume_24h?: number;\n  fee_generation_24h?: number;\n}\n\nexport interface HistoricalChart {\n  id?: number;\n  protocol: string;\n  timestamp: string;\n  value_usd: number;\n  tokens_amount: number;\n  cumulative_value: number;\n  cumulative_tokens: number;\n}\n\nexport class DatabaseService {\n  private static instance: DatabaseService;\n  private readonly BUYBACK_KEY = 'buyback_records';\n  private readonly HISTORICAL_KEY = 'historical_charts';\n\n  public static getInstance(): DatabaseService {\n    if (!DatabaseService.instance) {\n      DatabaseService.instance = new DatabaseService();\n    }\n    return DatabaseService.instance;\n  }\n\n  constructor() {\n    this.initializeWithSampleData();\n  }\n\n  public forceRefresh(): void {\n    // Clear existing data and regenerate\n    localStorage.removeItem(this.BUYBACK_KEY);\n    localStorage.removeItem(this.HISTORICAL_KEY);\n    this.generateSampleData();\n  }\n\n  private initializeWithSampleData(): void {\n    // Check if data already exists\n    const existingBuyback = localStorage.getItem(this.BUYBACK_KEY);\n    const existingHistorical = localStorage.getItem(this.HISTORICAL_KEY);\n    \n    // Check if we have the correct number of protocols (should be 7)\n    let needsRefresh = false;\n    if (existingBuyback) {\n      try {\n        const data = JSON.parse(existingBuyback);\n        const uniqueProtocols = new Set(data.map((item: any) => item.protocol));\n        if (uniqueProtocols.size < 7) {\n          needsRefresh = true;\n        }\n      } catch (e) {\n        needsRefresh = true;\n      }\n    }\n    \n    if (!existingBuyback || !existingHistorical || needsRefresh) {\n      this.generateSampleData();\n    }\n  }\n\n  private generateSampleData(): void {\n    const protocols = [\n      { name: 'Hyperliquid', token: 'HYPE', basePrice: 19.3, baseVolume: 1200000000 },\n      { name: 'Jupiter', token: 'JUP', basePrice: 0.6, baseVolume: 850000000 },\n      { name: 'Aave', token: 'AAVE', basePrice: 192, baseVolume: 45000000 },\n      { name: 'Jito', token: 'JTO', basePrice: 5.0, baseVolume: 320000000 },\n      { name: 'Pump.fun', token: 'PUMP', basePrice: 0.165, baseVolume: 180000000 },\n      { name: 'DeBridge', token: 'DBR', basePrice: 6.0, baseVolume: 125000000 },\n      { name: 'Fluid', token: 'FLUID', basePrice: 6.0, baseVolume: 240000000 }\n    ];\n\n    const buybackRecords: BuybackRecord[] = [];\n    const historicalCharts: HistoricalChart[] = [];\n    \n    const now = new Date();\n    let cumulativeData: { [key: string]: { value: number; tokens: number } } = {\n      'Hyperliquid': { value: 350000000, tokens: 18000000 },\n      'Jupiter': { value: 24000000, tokens: 42000000 },\n      'Aave': { value: 20000000, tokens: 115000 },\n      'Jito': { value: 35000000, tokens: 7500000 },\n      'Pump.fun': { value: 20000000, tokens: 125000000 },\n      'DeBridge': { value: 12000000, tokens: 2200000 },\n      'Fluid': { value: 28000000, tokens: 4800000 }\n    };\n\n    for (let i = 30; i >= 0; i--) {\n      const date = new Date(now);\n      date.setDate(date.getDate() - i);\n      const timestamp = date.toISOString();\n\n      protocols.forEach(protocol => {\n        // Generate realistic variance\n        const priceVariance = 0.9 + Math.random() * 0.2;\n        const volumeVariance = 0.8 + Math.random() * 0.4;\n        const price = protocol.basePrice * priceVariance;\n        const volume = protocol.baseVolume * volumeVariance;\n        \n        // Calculate buyback amounts\n        let feePercent, dailyBuybackUSD, dailyTokens;\n        \n        if (protocol.name === 'Hyperliquid') {\n          feePercent = 97;\n          dailyBuybackUSD = (volume * 0.0002 * 0.97);\n          dailyTokens = dailyBuybackUSD / price;\n        } else if (protocol.name === 'Jupiter') {\n          feePercent = 50;\n          dailyBuybackUSD = (volume * 0.0001 * 0.5);\n          dailyTokens = dailyBuybackUSD / price;\n        } else if (protocol.name === 'Jito') {\n          feePercent = 75;\n          dailyBuybackUSD = (volume * 0.00015 * 0.75);\n          dailyTokens = dailyBuybackUSD / price;\n        } else if (protocol.name === 'Pump.fun') {\n          feePercent = 95;\n          dailyBuybackUSD = (volume * 0.0003 * 0.95);\n          dailyTokens = dailyBuybackUSD / price;\n        } else if (protocol.name === 'DeBridge') {\n          feePercent = 60;\n          dailyBuybackUSD = (volume * 0.0001 * 0.6);\n          dailyTokens = dailyBuybackUSD / price;\n        } else if (protocol.name === 'Fluid') {\n          feePercent = 80;\n          dailyBuybackUSD = (volume * 0.00012 * 0.8);\n          dailyTokens = dailyBuybackUSD / price;\n        } else { // Aave\n          feePercent = 100;\n          dailyBuybackUSD = Math.min(1000000 / 7, volume * 0.0004);\n          dailyTokens = dailyBuybackUSD / price;\n        }\n\n        // Update cumulative data\n        cumulativeData[protocol.name].value += dailyBuybackUSD;\n        cumulativeData[protocol.name].tokens += dailyTokens;\n\n        // Add buyback record\n        buybackRecords.push({\n          id: buybackRecords.length + 1,\n          protocol: protocol.name,\n          token: protocol.token,\n          timestamp,\n          total_repurchased: cumulativeData[protocol.name].tokens,\n          total_value_usd: cumulativeData[protocol.name].value,\n          circulating_supply_percent: protocol.name === 'Hyperliquid' ? 6.2 : protocol.name === 'Jupiter' ? 3.6 : protocol.name === 'Jito' ? 2.1 : protocol.name === 'Pump.fun' ? 0.445 : protocol.name === 'DeBridge' ? 1.5 : protocol.name === 'Fluid' ? 3.2 : 0.8,\n          estimated_annual_buyback: protocol.name === 'Hyperliquid' ? 600000000 : protocol.name === 'Jupiter' ? 250000000 : protocol.name === 'Jito' ? 180000000 : protocol.name === 'Pump.fun' ? 75000000 : protocol.name === 'DeBridge' ? 45000000 : protocol.name === 'Fluid' ? 95000000 : 52000000,\n          fee_allocation_percent: feePercent,\n          price_per_token: price,\n          trading_volume_24h: volume,\n          fee_generation_24h: volume * 0.0002\n        });\n\n        // Add historical chart data\n        historicalCharts.push({\n          id: historicalCharts.length + 1,\n          protocol: protocol.name,\n          timestamp,\n          value_usd: dailyBuybackUSD,\n          tokens_amount: dailyTokens,\n          cumulative_value: cumulativeData[protocol.name].value,\n          cumulative_tokens: cumulativeData[protocol.name].tokens\n        });\n      });\n    }\n\n    localStorage.setItem(this.BUYBACK_KEY, JSON.stringify(buybackRecords));\n    localStorage.setItem(this.HISTORICAL_KEY, JSON.stringify(historicalCharts));\n  }\n\n  // Insert buyback record\n  insertBuybackRecord(record: BuybackRecord): number {\n    const records = this.getBuybackRecords();\n    const newId = Math.max(...records.map(r => r.id || 0), 0) + 1;\n    record.id = newId;\n    records.push(record);\n    localStorage.setItem(this.BUYBACK_KEY, JSON.stringify(records));\n    return newId;\n  }\n\n  // Insert historical chart data\n  insertHistoricalData(data: HistoricalChart): number {\n    const records = this.getHistoricalRecords();\n    const newId = Math.max(...records.map(r => r.id || 0), 0) + 1;\n    data.id = newId;\n    records.push(data);\n    localStorage.setItem(this.HISTORICAL_KEY, JSON.stringify(records));\n    return newId;\n  }\n\n  private getBuybackRecords(): BuybackRecord[] {\n    const data = localStorage.getItem(this.BUYBACK_KEY);\n    return data ? JSON.parse(data) : [];\n  }\n\n  private getHistoricalRecords(): HistoricalChart[] {\n    const data = localStorage.getItem(this.HISTORICAL_KEY);\n    return data ? JSON.parse(data) : [];\n  }\n\n  // Get latest buyback data for all protocols\n  getLatestBuybackData(): BuybackRecord[] {\n    const records = this.getBuybackRecords();\n    const latestByProtocol: { [protocol: string]: BuybackRecord } = {};\n    \n    records.forEach(record => {\n      if (!latestByProtocol[record.protocol] || \n          new Date(record.timestamp) > new Date(latestByProtocol[record.protocol].timestamp)) {\n        latestByProtocol[record.protocol] = record;\n      }\n    });\n\n    return Object.values(latestByProtocol);\n  }\n\n  // Get historical data for charts\n  getHistoricalData(protocol?: string, days: number = 30): HistoricalChart[] {\n    const records = this.getHistoricalRecords();\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - days);\n    \n    return records.filter(record => {\n      const recordDate = new Date(record.timestamp);\n      const matchesProtocol = !protocol || record.protocol === protocol;\n      const withinTimeframe = recordDate >= cutoffDate;\n      return matchesProtocol && withinTimeframe;\n    }).sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n  }\n\n  // Get buyback trends\n  getBuybackTrends(protocol: string, days: number = 30): any[] {\n    const records = this.getBuybackRecords();\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - days);\n    \n    return records\n      .filter(record => {\n        const recordDate = new Date(record.timestamp);\n        return record.protocol === protocol && recordDate >= cutoffDate;\n      })\n      .map(record => ({\n        timestamp: record.timestamp,\n        total_value_usd: record.total_value_usd,\n        total_repurchased: record.total_repurchased,\n        price_per_token: record.price_per_token,\n        trading_volume_24h: record.trading_volume_24h\n      }))\n      .sort((a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime());\n  }\n\n  // Get performance metrics\n  getPerformanceMetrics(): any[] {\n    const records = this.getBuybackRecords();\n    const metricsByProtocol: { [protocol: string]: any } = {};\n    \n    records.forEach(record => {\n      if (!metricsByProtocol[record.protocol]) {\n        metricsByProtocol[record.protocol] = {\n          protocol: record.protocol,\n          data_points: 0,\n          total_value: 0,\n          values: [],\n          supply_reductions: []\n        };\n      }\n      \n      const metrics = metricsByProtocol[record.protocol];\n      metrics.data_points++;\n      metrics.total_value += record.total_value_usd;\n      metrics.values.push(record.total_value_usd);\n      metrics.supply_reductions.push(record.circulating_supply_percent);\n    });\n\n    return Object.values(metricsByProtocol).map((metrics: any) => ({\n      protocol: metrics.protocol,\n      data_points: metrics.data_points,\n      avg_value_usd: metrics.total_value / metrics.data_points,\n      max_value_usd: Math.max(...metrics.values),\n      min_value_usd: Math.min(...metrics.values),\n      avg_supply_reduction: metrics.supply_reductions.reduce((a: number, b: number) => a + b, 0) / metrics.supply_reductions.length\n    }));\n  }\n\n  // Clean old data (keep last 90 days)\n  cleanOldData(): number {\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - 90);\n    \n    const buybackRecords = this.getBuybackRecords();\n    const historicalRecords = this.getHistoricalRecords();\n    \n    const filteredBuyback = buybackRecords.filter(record => \n      new Date(record.timestamp) >= cutoffDate\n    );\n    const filteredHistorical = historicalRecords.filter(record => \n      new Date(record.timestamp) >= cutoffDate\n    );\n    \n    localStorage.setItem(this.BUYBACK_KEY, JSON.stringify(filteredBuyback));\n    localStorage.setItem(this.HISTORICAL_KEY, JSON.stringify(filteredHistorical));\n    \n    return (buybackRecords.length - filteredBuyback.length) + \n           (historicalRecords.length - filteredHistorical.length);\n  }\n\n  // Close database connection (no-op for localStorage)\n  close(): void {\n    // No-op for localStorage implementation\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}